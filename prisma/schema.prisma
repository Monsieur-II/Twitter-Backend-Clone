generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  userName  String   @unique
  imageUrl  String?
  bio       String?  @default("Hello, I'm new here")
  location  String?
  website   String?
  isVerified Boolean  @default(false)
  isPrivate Boolean  @default(false)
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  reposts  Repost[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id         String   @id @default(uuid())
  content    String
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId   String
  userName   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes      Like[]
  comments Comment[]
  reposts Repost[]
}

model Like {
  id        String    @id @default(uuid())
  userId    String
  userName  String
  postId   String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId   String
  userName  String
  postId   String
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Repost {
  id        String   @id @default(uuid())
  userId    String
  userName  String
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}
